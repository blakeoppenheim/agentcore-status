owner: blakeoppenheim # Your GitHub username
repo: nvgtr-status # Your repository name

sites:
  - name: NVGTR AI
    url: https://app.nvgtr.ai
  - name: NVGTR API
    url: https://app.nvgtr.ai/api/health
  - name: NVGTR Website
    url: https://nvgtr.ai

status-website:
  # Custom domain
  cname: status.nvgtr.ai
  
  # Basic information
  name: NVGTR Status
  logoUrl: https://raw.githubusercontent.com/blakeoppenheim/nvgtr-status/master/assets/nvgtr-logo.svg
  favicon: https://raw.githubusercontent.com/blakeoppenheim/nvgtr-status/master/assets/nvgtr-icon.svg
  faviconSvg: https://raw.githubusercontent.com/blakeoppenheim/nvgtr-status/master/assets/nvgtr-icon.svg
  
  # Theme configuration
  theme: dark # Set default theme for non-supporting browsers
  themeUrl: https://raw.githubusercontent.com/blakeoppenheim/nvgtr-status/master/assets/nvgtr-theme.css
  
  # Text content
  introTitle: "NVGTR System Status Dashboard"
  introMessage: "This page provides real-time status information for NVGTR services. You can view current status, response times, and incident history."
  
  # Navigation
  navbar:
    - title: Status
      href: /
    - title: NVGTR
      href: https://nvgtr.ai

  # Custom scripts and styles
  js: |
    window.addEventListener('load', function() {
      // Function to detect system color scheme
      function detectColorScheme() {
        // Check for saved preference first
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
          return savedTheme;
        }
        
        // Otherwise, use system preference
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        } else {
          return 'light';
        }
      }
      
      // Function to apply theme
      function applyTheme(theme) {
        document.documentElement.setAttribute('data-theme', theme);
      }
      
      // Add a theme toggle button to the navbar
      const nav = document.querySelector('nav .container');
      if (nav) {
        const toggle = document.createElement('button');
        toggle.id = 'theme-toggle';
        toggle.innerHTML = 'üåì';
        toggle.setAttribute('aria-label', 'Toggle dark/light mode');
        toggle.style.marginLeft = 'auto';
        nav.appendChild(toggle);
        
        // Handle toggle button click
        toggle.addEventListener('click', function() {
          const currentTheme = document.documentElement.getAttribute('data-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
          applyTheme(newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }
      
      // Listen for system theme changes
      if (window.matchMedia) {
        const colorSchemeQuery = window.matchMedia('(prefers-color-scheme: dark)');
        
        // Set initial theme based on system/saved preference
        applyTheme(detectColorScheme());
        
        // Add change listener for system theme changes
        colorSchemeQuery.addEventListener('change', (e) => {
          // Only apply system change if user hasn't manually set a preference
          if (!localStorage.getItem('theme')) {
            applyTheme(e.matches ? 'dark' : 'light');
          }
        });
      } else {
        // Fallback for browsers that don't support matchMedia
        applyTheme('dark'); // Default to dark theme
      }
    });

# Notifications
notifications:
  email:
    - support@nvgtr.ai # Replace with your email

# Upptime also supports notifications on Slack, Discord, and Telegram
# For more information, see https://upptime.js.org/docs/notifications

i18n:
  footer: "Powered by NVGTR | ¬© 2025 Navigator Holdings, LLC."
  activeIncidents: "Active Incidents"
  allSystemsOperational: "All Systems Operational"
  incidentReport: "Incident Report #$NUMBER ‚Üí"
  activeIncidentSummary: "Opened at $DATE"
  incidentTitle: "Incident $NUMBER Details"
  incidentDetails: "Incident Details"
  incidentFixed: "Fixed"
  incidentOngoing: "Ongoing"
  incidentOpenedAt: "Opened at"
  incidentClosedAt: "Closed at"
  incidentSubscribe: "Subscribe to Updates"
  incidentViewOnGitHub: "View on GitHub"
  incidentCommentSummary: "Updated at $DATE"
  incidentBack: "‚Üê Back to all incidents"
  pastIncidents: "Past Incidents"
  pastIncidentsResolved: "Resolved in $DURATION"
  liveStatus: "Live Status"
  overallUptime: "Overall uptime: $UPTIME"
  overallUptimeTitle: "Overall uptime"
  averageResponseTime: "Average response time: $TIME"
  averageResponseTimeTitle: "Average response"
  sevelDayUptime: "7-day uptime"
  responseTimeTitle: "Response time"
  uptimeTitle: "Uptime"
  dayTitle: "day"
  daysTitle: "days"
  hourTitle: "hour"
  hoursTitle: "hours"
  minuteTitle: "minute"
  minutesTitle: "minutes"
  secondTitle: "second"
  secondsTitle: "seconds"
  uptimeDay: "24-hour uptime"
  uptimeWeek: "7-day uptime"
  uptimeMonth: "30-day uptime"
  uptimeYear: "1-year uptime"